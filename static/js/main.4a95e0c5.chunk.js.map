{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","users","setUsers","isOpen","setIsOpen","clickHandler","a","fetch","then","res","json","data","catch","error","console","className","title","onClick","map","user","index","style","color","status","name","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAsCeA,MAjCf,WAGE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEIC,EAAY,uCAAG,sBAAAC,EAAA,sEACbC,MAAM,wCACVC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAIP,EAASO,EAAIE,SACzBC,OAAM,SAACC,GAAD,OAAUC,QAAQD,MAAM,WAAYA,MAJzB,OAMlBT,GAAU,GANQ,2CAAH,qDAQhB,OACE,sBAAKW,UAAU,MAAMC,MAAM,MAA3B,UAEA,+CACG,wBAAQA,MAAM,kBAAkBC,QAASZ,EAAzC,sBAGEF,EAAM,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAOiB,KAAI,SAACC,EAAOC,GACzB,OAAO,sBAAKJ,MAAM,qBAAiCD,UAAU,gBAAtD,UACF,oBAAIC,MAAM,cAAcK,MAAO,CAACC,MAAuB,WAAhBH,EAAKI,OAAqB,QAAS,OAA1E,SAAmFJ,EAAKK,OACxF,6BAAKL,EAAKI,WAF6BH,MAKzC,OCpBCK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4a95e0c5.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\n\n\nfunction App() {\n\n\n  const [users, setUsers] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n\nconst clickHandler = async ()=>{\n  await fetch(\"https://gorest.co.in/public/v1/users\")\n   .then(res => res.json())\n   .then(res => setUsers(res.data))\n   .catch((error)=> console.error(\"Error!! \"+ error))\n\n   setIsOpen(true);\n }\n  return (\n    <div className=\"App\" title=\"app\"> \n\n    <h1>Get User List</h1>\n       <button title=\"get-user-button\" onClick={clickHandler}>click me</button>\n\n       {\n         isOpen? users?.map((user , index)=>{\n           return <div title=\"app-user-container\" key={index} className=\"app-user-card\">\n                <h2 title=\"app-h2-user\" style={{color: user.status === \"active\"? \"green\": \"red\"}}>{user.name}</h2>  \n                <h5>{user.status}</h5>\n           </div>\n\n         }) : \"\"\n       }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}